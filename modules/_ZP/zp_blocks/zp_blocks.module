<?php
// Русский...

/**
 * @file
 * Module for building and managing site's blocks.
 */


//module_load_include('inc', 'zp_blocks', 'inc/constants');


/**
 * Implements hook_block_info().
 */
function zp_blocks_block_info() {
  
  $blocks['footer_links'] = array(
    'info' => 'Footer links',
    'cache' => DRUPAL_NO_CACHE,
  );
  
  $blocks['sidebar_share_block'] = array(
    'info' => 'Share this Post Static',
    'cache' => DRUPAL_NO_CACHE,
  );
  
  $blocks['zp_cur_dpt_subgroups'] = array(
    'info' => 'Current department subgroups',
    'cache' => DRUPAL_NO_CACHE,
  );
  
  
  $blocks['zp_cur_dpt'] = array(
    'info' => 'Current department',
    'cache' => DRUPAL_NO_CACHE,
  );
  
  
  $blocks['getCountryFromBar'] = array(
    'info' => 'Get Country From Bar Tool',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  // Aquire blocks for all prefaces with defined bottoms.
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_preface_bottom', 'pb', 'pb.entity_id = n.nid');
  $query->fields('pb', array('entity_id'));
  $query->leftJoin('field_data_field_preface_key', 'pk', 'pk.entity_id = pb.entity_id');
  $query->fields('pk', array('field_preface_key_value'));
  $query->condition('pb.delta', 0);
  $query->condition('pb.field_preface_bottom_value', 1, '>=');
  $query->isNotNull('pk.field_preface_key_value');
  
  $prefaces_v_bottoms = $query->execute()->fetchAllAssoc('entity_id');

  variable_set('zp_prefaces_w_bottoms', serialize($prefaces_v_bottoms));
 
  foreach ($prefaces_v_bottoms as $prefaces_v_bottom) {
    
    $blocks['bottom_of_' . $prefaces_v_bottom->field_preface_key_value] = array(
      'info' => 'Bottom of ' . $prefaces_v_bottom->field_preface_key_value,
      'cache' => DRUPAL_NO_CACHE,
    );
  
  }
  
      
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function zp_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {  
   
    
    case 'footer_links':
      $block['subject'] = 'Footer links';
      $block['content'] = zp_blocks_get_footerLinks();
      break; 
    
    case 'sidebar_share_block':
      $block['subject'] = 'Share this Post:';
      $block['content'] = zp_blocks_getSidebarShareStaticBlock();
      break;
    
    case 'zp_cur_dpt_subgroups':
      $block['subject'] = 'Подгруппы:';
      $block['content'] = zp_blocks_getCurrentDeptSubgroups();
      break;
    
    case 'zp_cur_dpt':
      $block['subject'] = 'Текущий отдел';
      $block['content'] = zp_blocks_getCurrentDept();
      break;
    
  
    case 'getCountryFromBar':
      $block['subject'] = '';
      $block['content'] = drupal_get_form('zp_misc_getCountryAndBrand_fromBar_form');
      break;
    
    default:
      
      // Aquire blocks for all prefaces with defined bottoms.
      $prefaces_v_bottoms = unserialize(variable_get('zp_prefaces_w_bottoms'));
      foreach ($prefaces_v_bottoms as $prefaces_v_bottom) {

        if ($delta == 'bottom_of_' . $prefaces_v_bottom->field_preface_key_value) {
          $block['subject'] = '';
          $block['content'] = zp_misc_getPrefaceBottomSection(NULL, $prefaces_v_bottom->entity_id);
        }
        
      }
      
      break;

    
  }

  return $block;
}


/**
 * Implements hook_block_configure().
 */
function zp_blocks_block_configure($delta = '') {
  
  $form = array();
  
  switch ($delta) {
  }
  
  return $form;
}


/**
 * Implements hook_block_save().
 */
function zp_blocks_block_save($delta = '', $edit = array()) {

  switch ($delta) {
    
  }
  
}




/**
 * Deprecated... was used with nodes as depts
 * Current dept subgroups (if any)
 */
/*
function zp_blocks_getCurrentDeptSubgroups() {
  
  global $zp_global_data;
  
  $out = NULL;
  
  if (!empty($zp_global_data['current_dept_subgroups'])) {
    $out = $zp_global_data['current_dept_subgroups'];
  }
  
  return $out;
}
*/


/**
 * Block with sidebar share links for a current post.
 */
function zp_blocks_getSidebarShareStaticBlock($node = NULL, $block_title = NULL) {
  
  if (!$node) {
    if (strpos($_GET['q'], 'node/') === FALSE) {
      return NULL;
    }
    $node = node_load(str_replace('node/', '', $_GET['q']));
  }
  //dpm($_GET);
  //dpm($node);
  
  $out = NULL;
  $source = 'www.zapokupkami.com';
  $post_url = url($_GET['q'], array('absolute' => TRUE));
  $post_title = $node->title;
  $summary = !empty($node->metatags['description']['value']) ? $node->metatags['description']['value'] : drupal_substr(strip_tags(@$node->body['und'][0]['value']), 0, 200);

  $link_open = 'href="javascript:void(window.open(' . "'";
  $links = array(
      'Twitter' => array('social_url' => 'http://twitter.com/share', 'query' => array('text' => $post_title, 'via' => 'zapokupkami.com')),
      'Facebook' => array('social_url' => 'http://www.facebook.com/sharer.php', 'query' => array('u' => $post_url), 'link_close' => "','ShareThis','toolbar=0,status=0,width=626,height=436'))"),
      //array('social_url' => 'http://www.facebook.com/sharer.php', 'query' => array('p[title]' => $post_title, 'p[url]' => $post_url, 'p[summary]' => $summary, 'p[images]' => $image, )),
      'GooglePlus' => array('social_url' => 'https://plus.google.com/share', 'query' => array('url' => $post_url)),
      'LinkedIn' => array('social_url' => 'http://www.linkedin.com/shareArticle', 'query' => array('title' => $post_title, 'mini' => 'true', 'url' => $post_url, 'summary' => $summary, 'source' => $source)),
  
    //'http://twitter.com/share?text=What%20is%20%E2%80%9CBig%20Data%E2%80%9D%20in%20Healthcare,%20and%20Who%E2%80%99s%20Already%20Doing%20It?',
    //'http://www.linkedin.com/shareArticle?mini=true&url=http://profitable-practice.softwareadvice.com/what-is-big-data-in-healthcare-0813/&title=What%20is%20%E2%80%9CBig%20Data%E2%80%9D%20in%20Healthcare,%20and%20Who%E2%80%99s%20Already%20Doing%20It?&summary=What+will+big+data+mean+for+healthcare%3F+I+talked+to+expert+Dr.+Russell+Richmond%2C+and+looked+at+5+companies+using+big+data+today.&source=The+Profitable+Practice',
    //'https://plus.google.com/share?url=http://profitable-practice.softwareadvice.com/what-is-big-data-in-healthcare-0813/',
    //'http://www.facebook.com/sharer.php?s=%20100&p[title]=What%20is%20%E2%80%9CBig%20Data%E2%80%9D%20in%20Healthcare,%20and%20Who%E2%80%99s%20Already%20Doing%20It?&p[url]=http://profitable-practice.softwareadvice.com/what-is-big-data-in-healthcare-0813/&p[images][0]=http://profitable-practice.softwareadvice.com/files/2013/08/genomedata_thumbnail.jpg&p[summary]=What+will+big+data+mean+for+healthcare%3F+I+talked+to+expert+Dr.+Russell+Richmond%2C+and+looked+at+5+companies+using+big+data+today.',
  );
  
  foreach ($links as $class => $link) {
    $out .= l($class, $link['social_url'], array('attributes' => array(/*'target' => '_blank',*/ 'class' => array($class), 'rel' => 'nofollow'), 'query' => $link['query']));
  }
  
  return '<div class="share-static">' . $block_title . $out . '</div>';
}


/**
 * Returns a themed Footer menu (with submenus).
 */
function zp_blocks_get_footerMenu() {
  
  $cid = 'zp_footer_menu';
  $cache = cache_get($cid, 'cache');

  if ($cache && !empty($cache->data) && $cache->expire > time()) {
    $out = $cache->data;
  }
  else 
    {
    $menu = menu_build_tree('menu-footer-menu');
    $out = theme('zp_misc_submenuSimple_byColumns', array('submenu' => array('below' => $menu)/*, 'class' => 'menu'*/, 'delimiter' => '<li> | </li>')); // . '<div class="c">В© 2013 cloudhostinghq.com | All Rights Reserved</div>';
    cache_set($cid, $out, 'cache', strtotime('+31 day'));
  } 
  
  return $out;
}


/**
 * Returns a themed Footer simple line links.
 */
function zp_blocks_get_footerLinks() {
  
  $cid = 'zp_footer_links';
  $cache = cache_get($cid, 'cache');

  if ($cache && !empty($cache->data) && $cache->expire > time()) {
    $out = $cache->data;
  }
  else {
    $menu = menu_build_tree('menu-footer-links');
    $out = theme('zp_misc_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu', 'delimiter' => '<li> | </li>')); // . '<div class="c">В© 2012 GetVoIP.com | All Rights Reserved</div>';
    cache_set($cid, $out, 'cache', strtotime('+31 day'));
  } 
    
  return $out;
}


/**
 * Dispatcher for getting themed block for MegaMenu by a block title.
 */
function zp_blocks_get_omMenuBlock_byTitle($title, $function) {

  // global $language;
  // $types = cache_get('types_' . $language->language);
  // Expire = current time + 2 hours.
  // cache_set('types_' . $language->language, $types, 'cache', time() + 7200);
  
  // Get main menu wireframe menu.
  $submenu = zp_blocks_getSubmenuByTitle('main-menu', $title);
  //return '<div class="om-btitle">' . $title . '</div>' . $function($submenu);
  return $function($submenu);
}


/**
 * Returns a themed VoIP Blog block content for MegaMenu.
 */
function zp_blocks_get_omMenuBlock_Blog($submenu) {
  $block_data = array('module' => 'zp_blocks', 'delta' => 'blog_post_topics', 'subject_visible' => FALSE);
  $out = zp_blocks_getBlockThemed($block_data);
  return $out;  
  //return theme('zp_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a submenu from a menu.
 */
function zp_blocks_getSubmenuByTitle($menu_name, $submenu_title) {
  $menu = menu_build_tree($menu_name);
  if(!$menu) {
    return NULL;
  }
  foreach ($menu as $submenu) {
    if ($submenu['link']['link_title'] == $submenu_title) {
      return $submenu;
    }
  }
  return NULL;
}


/**
 * Wrap a block content in proper block's divs.
 */
/*
function zp_blocks_wrapInBlockThemed($block_data, $block)
{
  if(!isset($block['content']) || !$block['content']) {
      return null;
  }
  if (is_array($block['content'])) {
    $block['content'] = render($block);
  }
  if(isset($block_data['subjectTag']) && $block_data['subjectTag']) {
    $subjectTag = $block_data['subjectTag'];
  }
  else {
    $subjectTag = 'h2';
  }
  if(isset($block_data['replaceUnderlinesWithDashesInID']) && $block_data['replaceUnderlinesWithDashesInID']) {
    $block_data['module'] = str_replace('_', '-', $block_data['module']);
    $block_data['delta'] = str_replace('_', '-', $block_data['delta']);
  }
  if (isset($block_data['shadow']) && $block_data['shadow']) {
    return 
      '<section id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block ch block-' . $block_data['module'] . (isset($block_data['class']) ? ' ' . $block_data['class'] : '') . '">' 
        . '<div class="inside">'
            . ( ($block['subject'] && (!isset($block_data['subject_visible']) || $block_data['subject_visible']) )
                ? 
                '<div class="block-icon pngfix"></div><' . $subjectTag . ' class="block-title">' . $block['subject'] . '</' . $subjectTag . '>'
                :
                '') 
            . '<div class="content">' . $block['content'] . '</div>
          </div> <!-- /.inside -->
          <div class="shadow"></div>
      </section>';
  }
  else {
    return 
      '<section id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block ch block-' . $block_data['module'] . (isset($block_data['class']) ? ' ' . $block_data['class'] : '') . '">' 
         . ( ($block['subject'] && (!isset($block_data['subject_visible']) || $block_data['subject_visible']) )
            ? 
            '<div class="block-icon pngfix"></div><' . $subjectTag . ' class="block-title">' . $block['subject'] . '</' . $subjectTag . '>'
            :
            '') 
         . '<div class="content">' . $block['content'] . '</div>
      </section>';
  }
}
*/


/**
 * Returns a content of a block wrapped in proper divs.
 */
/*
function zp_blocks_getBlockThemed_noCache($block_data){
  
  // No caching version.
  
  $block = module_invoke($block_data['module'], 'block_view', $block_data['delta']);

  if ($block) {
    if (isset($block_data['subject'])) {
      $block['subject'] = $block_data['subject'];
    }
    elseif (@$block_data['no_subject']) {
      $block['subject'] = '';
    }
    return zp_blocks_wrapInBlockThemed($block_data, $block);
  }
  return NULL;
  
}
*/


/**
 * Returns a content of a block wrapped in proper divs.
 */
/*
function zp_blocks_getBlockThemed($block_data, $cache_on = FALSE, $cache_expire_str = FALSE, $suffix = NULL) {

  
  
  // No caching version.
  
  if (!$cache_on) {
    return zp_blocks_getBlockThemed_noCache($block_data);
  }

  
  
  // Caching system version.
  
  $cid = 'zp-block-cache---' . $block_data['module'] . '-' . $block_data['delta'] . $suffix;
  $cache = cache_get($cid, 'cache');

  if ($cache && !empty($cache->data) && $cache->expire > time()) {
    $out = $cache->data;
  }
  else {

    if ($out = zp_blocks_getBlockThemed_noCache($block_data)) {
      if ($cache_expire_str) {
        cache_set($cid, $out, 'cache', strtotime($cache_expire_str));
      }
      else {
        cache_set($cid, $out, 'cache');
      }
      
    }

  } // End of else of if ($cache && !empty($cache->data) && $cache->expire > time()) {

  return $out;
}
*/

/**
 * Alter the menu tree and its configuration before the tree is rendered.
 *
 * @param $tree
 *   An array containing the unrendered menu tree.
 * @param $config
 *   An array containing the configuration of the tree.
 */
//function zp_misc_menu_block_tree_alter(&$tree, &$config) {
  //dpm($tree);
  //dpm($config);
//}


/**
 * 
 * @param type $data
 * @param type $block
 */
function zp_blocks_block_view_alter(&$data, $block) {
    
  if (isset($block->bid) && $block->bid == 'menu_block-1') {
    
    //dpm($data);
    //dpm($block);  
    
    global $zp_current_trail;
    //dpm($zp_current_trail);
    
    $current_menu_item_num = count($zp_current_trail) - 1;
    
    $upper_links = NULL;
    if ($zp_current_trail && $zp_current_trail[$current_menu_item_num - 1]['href'] != '<front>' && $zp_current_trail[$current_menu_item_num - 1]['plid'] != 0 && $zp_current_trail[$current_menu_item_num - 2]['plid'] != 0) {
      // Parent is Front or a City
      // So we don't add upper links
      $upper_links .= '<div class="up-1">' . l($zp_current_trail[$current_menu_item_num - 1]['link_title'], $zp_current_trail[$current_menu_item_num - 1]['link_path']) . '</div><div class="up-delim">^<div>';
      if ($zp_current_trail[$current_menu_item_num - 2]['href'] != '<front>' && $zp_current_trail[$current_menu_item_num - 2]['plid'] != 0 && $zp_current_trail[$current_menu_item_num - 3]['plid'] != 0) {
        $upper_links = '<div class="up-2">' . l($zp_current_trail[$current_menu_item_num - 2]['link_title'], $zp_current_trail[$current_menu_item_num - 2]['link_path']) . '</div><div class="up-delim">^<div>' . $upper_links;
      }
      $data['content']['#content']['#prefix'] = $upper_links;
    }
  } // End of if (isset($block->bid) && $block->bid == 'menu_block-1') {  
  
}



/**
 * Shows in a block a rendered term 
 * as a dept on the views dept with subdepts or products
 * 
 */
function zp_blocks_getCurrentDept() {
  
  $current_dept_zp_id = arg(1);
  
  if (!$tid = zp_misc_fieldRead_idByValue_single('zp_id', $current_dept_zp_id, 'taxonomy_term', 'catalog')) {
    
    // Pity... too late for drupal_not_found here... Context doesn't catch it...
    // So i have put this check in views page header
//    drupal_not_found();
//    drupal_exit();
    return;
  }
  
  $articles_tids = NULL;
  global $current_place_in_catalog;
  
  $term = taxonomy_term_load($tid);

  if (!empty($term->field_article_product_depts['und'])) {
    foreach ($term->field_article_product_depts['und'] as $articles_tid) {  
      $articles_tids = ($articles_tids ? $articles_tids . '+' : '') . $articles_tid['tid'];
    }
  }
  
  $current_place_in_catalog = array(
    'type' => 'department',  
    'title' => $term->name,
    'tid' => $term->tid,
    'vid' => $term->vid,
    'current_zp_id' => $term->field_zp_id['und'][0]['safe_value'],  
    'parent_zp_id' => $term->field_parent_zp_id['und'][0]['safe_value'],
    'product_types_and_articles_tids' => $articles_tids,
  );

  drupal_set_title($term->name);

  $term_view = taxonomy_term_view($term, 'full');

  return drupal_render($term_view);
}